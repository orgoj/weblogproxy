# weblogproxy configuration example

config_reload:
  enabled: true         # Enable dynamic config reloading
  interval: 60         # Check for config changes every 60 seconds (in seconds)

server:
  port: 8080           # Port to listen on
  host: "0.0.0.0"      # Host to bind to (0.0.0.0 for all interfaces)
  mode: "embedded"     # 'standalone' or 'embedded'
  # domain: "weblogproxy.example.com"  # Domain for absolute URLs in standalone mode (required for standalone)
  # protocol: "http"    # Protocol for generated URLs ("http" or "https"), default: http
  path_prefix: "__wlp__" # Path prefix for endpoints, only used in 'embedded' mode (required for embedded)
  trusted_proxies:     # List of trusted reverse proxy IPs/CIDRs
    - "192.168.0.0/16"  # Allows X-Forwarded-For from local network
    - "10.0.0.1"        # Specific trusted proxy IP
  # health_allowed_ips:   # List of IPs/CIDRs allowed to access /health endpoint (default: allow all)
  #   - "192.168.0.0/16"
  cors:
    enabled: true       # Enable CORS for standalone mode
    allowed_origins:
      - "https://www.example.com"
      - "https://app.example.com"
    max_age: 86400      # The preflight request cache duration in seconds (24 hours)
  headers:              # Custom headers for /logger.js response (e.g., caching)
    Cache-Control: "public, max-age=3600" # 1 hour cache
  request_limits:       # Request limits for /log endpoint
    max_body_size: 102400 # bytes (100KB)
    rate_limit: 1000      # requests per minute per IP to /log (0 = unlimited, disables rate limiting)
  javascript:
    global_object_name: "wlp" # Name of the global JS object injected by logger.js (default: wlp)
  unknown_route:
    code: 200
    cache_control: "public, max-age=3600"
  # client_ip_header: "CF-Connecting-IP" # Header to use for real client IP (e.g. CF-Connecting-IP, X-Real-IP, X-Client-Real-IP). If not set, fallback to X-Forwarded-For (trusted) or RemoteAddr.

app_log:
  level: "WARN"  # Minimum level to log (TRACE, DEBUG, INFO, WARN, ERROR, FATAL)
  show_health_logs: false  # Set to true to see logs for /health endpoint calls

security:
  token:
    secret: "change_this_to_a_secure_random_string" # MUST be changed
    expiration: "24h"  # Token expiration as string (e.g., "10m", "1h", "24h", "1h30m")

log_config:
  # Example rule with all possible options
  - condition:
      site_id: "example-site"
      gtm_ids:
        - "GTM-ABC123"
        - "GTM-DEF456"
      user_agents:
        - "Mozilla/5.0*"
        - "AppleWebKit*"
      ips:
        - "192.168.1.0/24"  # Internal network
        - "10.0.0.0/8"      # VPN
      headers:
        Content-Type: "application/json"   # Header must have this value
        Authorization: true                 # Header must exist (any value)
        X-Debug-Mode: false                 # Header must NOT exist
    enabled: true
    continue: false  # If true, rule only accumulates data/scripts, does not affect logging decision
    javascript_options:
      track_url: true       # Track page URL for each log event
      track_traceback: true # Track JavaScript call stack for each log event
    add_log_data:
      - name: "website"
        source: "static"
        value: "example.com"
      - name: "environment"
        source: "static"
        value: "staging"
      - name: "campaign_id"
        source: "query"
        value: "utm_campaign"
    script_injection:
      - url: "https://cdn.example.com/site-specific/init.js"
        async: false
        defer: true
    log_destinations: ["prod_file", "prod_gelf"] # List of destination names (optional, default: all enabled)

  # Example rule with dots in site_id (for domain-style identifiers)
  - condition:
      site_id: "app.example.com"
    enabled: true
    javascript_options:
      track_url: true
    add_log_data:
      - name: "domain"
        source: "static"
        value: "app.example.com"

  # Minimal rule (matches all, accumulates data/scripts, does not affect logging decision)
  - condition: {}
    enabled: true
    continue: true
    add_log_data:
      - name: "weblogproxy_hostname"
        source: "static"
        value: "weblogproxy-prod-01"
    script_injection:
      - url: "https://cdn.example.com/shared/base-analytics.js"
        async: true
        # defer: false (default)

  # Rule for development/test
  - condition:
      site_id: "test-site"
    enabled: true
    # log_destinations: [] # All enabled destinations by default

# Note: If no rule with continue:false matches, logging is effectively disabled.

log_destinations:
  # GELF (Graylog) destination example
  - name: "prod_gelf"
    type: "gelf"
    enabled: false
    host: "graylog.example.com"
    port: 12201
    # protocol: "udp"           # "udp" or "tcp" (default: udp)
    # compression_type: "gzip"  # "gzip", "zlib", or "none" (default: none)
    # max_message_size: 8192     # Max GELF message size in bytes (default: 8192 for udp)
    add_log_data:
      - name: "facility"
        source: "static"
        value: "weblogproxy"
      - name: "target_system"
        source: "static"
        value: "graylog"

  # File destination example
  - name: "prod_file"
    type: "file"
    enabled: true
    path: "/var/log/weblogproxy/access.log"
    format: "json"              # "json" or "text"
    # max_message_size: 4096     # Max log message size in bytes (default: 4096)
    add_log_data:
      - name: "output_format"
        source: "static"
        value: "json_lines"
    rotation:
      max_size: "100MB"         # Max file size before rotation
      max_age: "7d"             # Max age before rotation
      max_backups: 10            # Number of rotated files to keep
      compress: true             # Compress rotated files

